name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # weekly scheduled security audit (optional)
  schedule:
    - cron: '0 3 * * 0'   # every Sunday at 03:00 UTC - runs the whole pipeline (you can tune)

jobs:
  build-and-checks:
    name: Build, Test, Lint, Format, Audit
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install rustfmt & clippy
        run: |
          rustup component add rustfmt clippy || true

      - name: Install cargo-audit
        run: |
          cargo install --locked cargo-audit || echo "cargo-audit install failed (may already be present)"

      - name: cargo check
        run: cargo check --all-targets --all-features

      - name: cargo test
        run: cargo test --all-features -- --nocapture

      - name: cargo clippy (deny warnings)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: cargo fmt check
        run: cargo fmt -- --check

      - name: cargo audit (fail on advisories)
        run: cargo audit

  coverage:
    name: Coverage (tarpaulin) â€” optional
    runs-on: ubuntu-latest
    needs: build-and-checks
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install tarpaulin
        run: |
          cargo install cargo-tarpaulin --locked

      - name: Run tarpaulin (coverage)
        run: |
          cargo tarpaulin --ignore-tests --out Xml
        # optional: upload coverage report artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: tarpaulin-report.xml

      # Optional: send to Codecov (requires CODECOV_TOKEN secret)
      - name: Upload to Codecov (optional)
        if: secrets.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v4
        with:
          files: tarpaulin-report.xml
          token: ${{ secrets.CODECOV_TOKEN }}
